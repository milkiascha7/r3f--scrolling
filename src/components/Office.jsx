/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { TransformControls, useGLTF, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";
import React, { useLayoutEffect, useRef } from "react";
import { useControls } from "leva";

export const FLOOR_HEIGHT = 2.3;
export const NB_FLOORS = 3;

export function Office(props) {
  const { nodes, materials } = useGLTF("./models/WawaOffice.glb");
  const ref = useRef();
  const tl = useRef();
  const libraryRef = useRef();
  const atticRef = useRef();

  const scroll = useScroll();

  const { position, rotation } = useControls("mesh", {
    position: {
      value: { x: 0.5, y: -1, z: -1 },
      step: 0.5,
    },
    rotation: {
      value: { x: 0, y: -Math.PI / 3, z: 0 },
      step: 0.5,
    },
  });

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration());
    // console.log(ref.current.position);
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline();

    // VERTICAL ANIMATION
    tl.current.to(
      ref.current.position,
      {
        duration: 2,
        y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
      },
      0
    );

    // Office Rotation
    tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: Math.PI / 6, z: 0 },
      0
    );
    tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: -Math.PI / 6, z: 0 },
      1
    );

    // Office movement
    tl.current.to(
      ref.current.position,
      {
        duration: 1,
        x: -1,
        z: 2,
      },
      0
    );
    tl.current.to(
      ref.current.position,
      {
        duration: 1,
        x: 1,
        z: 2,
      },
      1
    );

    // LIBRARY FLOOR
    tl.current.from(
      libraryRef.current.position,
      {
        duration: 0.5,
        x: 2,
      },
      0.5
    );
    tl.current.from(
      libraryRef.current.rotation,
      {
        duration: 0.5,
        y: -Math.PI / 2,
      },
      0
    );

    // ATTIC
    tl.current.from(
      atticRef.current.position,
      {
        duration: 1.5,
        y: 2,
      },
      0
    );

    tl.current.from(
      atticRef.current.rotation,
      {
        duration: 0.5,
        y: Math.PI / 2,
      },
      1
    );

    tl.current.from(
      atticRef.current.position,
      {
        duration: 0.5,

        z: -2,
      },
      1.5
    );
  }, []);

  return (
    <>
      <TransformControls object={ref} mode="translate" />
      <TransformControls object={libraryRef} mode="translate" />
      <TransformControls object={atticRef} mode="translate" />
      <group
        {...props}
        dispose={null}
        ref={ref}
        position={[position.x, position.y, position.z]}
        rotation={[rotation.x, rotation.y, rotation.z]}
      >
        <mesh
          geometry={nodes["01_office"].geometry}
          material={materials["01"]}
        />
        <group position={[0, 2.11, -2.23]}>
          <group ref={libraryRef}>
            <mesh
              geometry={nodes["02_library"].geometry}
              material={materials["02"]}
            />
          </group>
        </group>
        <group position={[-1.97, 4.23, -2.2]}>
          <group ref={atticRef}>
            <mesh
              geometry={nodes["03_attic"].geometry}
              material={materials["03"]}
            />
          </group>
        </group>
      </group>
    </>
  );
}

useGLTF.preload("./models/WawaOffice.glb");
